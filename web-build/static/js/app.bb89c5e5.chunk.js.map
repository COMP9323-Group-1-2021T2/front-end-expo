{"version":3,"sources":["api/index.js","contexts/CategoriesContext.js","core/theme.js","core/screen.js","components/NewNavbar.jsx","screens/HomeScreen.jsx","components/Video.jsx","components/ContentContainer.jsx","screens/InfoScreen.jsx","components/Article.jsx","screens/ArticlesScreen.jsx","screens/ContactsScreen.jsx","screens/VideosScreen.jsx","components/WatsonChatbot.jsx","Main.jsx","contexts/UserContext.js","App.js"],"names":["baseUrl","Constants","manifest","extra","apiBaseURL","getCategories","a","async","fetch","headers","res","json","jsonData","ok","Error","data","getCategoryInfo","categoryId","info","getCategoryArticles","getCategoryVideos","CategoriesContext","React","createContext","isCategoriesLoaded","categories","categoriesMap","setSelectedCategoryId","articles","videos","CategoriesContainer","children","useState","setIsCategoriesLoaded","setCategories","setCategoriesMap","selectedCategoryId","setInfo","setArticles","setVideos","useEffect","length","cm","forEach","category","parent_id","id","name","subCategories","push","contextValue","Provider","value","theme","DefaultTheme","colors","primary","secondary","error","isMobileScreen","useWindowDimensions","width","NewNavbar","navigation","useNavigation","useContext","parentIds","Object","keys","parentSelected","setParentSelected","isOpen","setIsOpen","styles","largeStyles","isMobile","mobileStyles","View","style","container","titleContainer","IconButton","icon","color","size","display","onPress","Title","title","navigate","menus","menusHiddenMobile","map","pId","key","menuItem","Menu","menu","visible","onDismiss","anchor","Headline","menuTitle","subCategory","Item","getHelpContainer","getHelpText","titleStyle","marginTop","paddingBottom","window","open","StyleSheet","create","flexDirection","justifyContent","backgroundColor","fontSize","flexGrow","marginRight","paddingVertical","paddingHorizontal","borderRightWidth","borderRightColor","padding","cursor","paddingTop","paddingLeft","HomeScreen","contentContainer","alignItems","Video","video","Card","marginBottom","Cover","source","uri","image","Content","Paragraph","numberOfLines","description","Actions","Button","url","ContentContainer","route","useRoute","params","routeName","tabsContainer","tabContainer","selectedTab","height","margin","InfoScreen","Text","Article","article","ArticlesScreen","articleContainer","flexWrap","ContactsScreen","contact","i","fontWeight","number","link","VideosScreen","videoContainer","WatsonChatbot","styleSheet","document","createElement","innerText","head","appendChild","console","log","watsonAssistantChatOptions","integrationID","region","serviceInstanceID","onLoad","instance","render","setTimeout","t","src","Stack","createStackNavigator","Main","Navigator","initialRouteName","headerMode","Screen","component","loadingContainer","ActivityIndicator","animating","UserContext","doneInitialising","UserContainer","linking","config","screens","Home","Contacts","Info","Articles","Videos","App","NavigationContainer"],"mappings":"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","file":"static/js/app.bb89c5e5.chunk.js","sourcesContent":["import Constants from 'expo-constants';\r\n\r\nconst baseUrl = Constants.manifest.extra.apiBaseURL\r\n\r\nexport const getCategories = async () => {\r\n  const res = await fetch(`${baseUrl}/categories`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const jsonData = await res.json();\r\n\r\n  if (!res.ok) {\r\n    throw new Error(\"failed to fetch categories\");\r\n  }\r\n\r\n  return jsonData.data;\r\n}\r\n\r\nexport const getCategoryInfo = async (categoryId) => {\r\n  const res = await fetch(`${baseUrl}/${categoryId}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const jsonData = await res.json();\r\n\r\n  if (!res.ok) {\r\n    throw new Error(`failed to fetch category info for category id: ${categoryId}`);\r\n  }\r\n\r\n  return jsonData.data.info;\r\n}\r\n\r\nexport const getCategoryArticles = async (categoryId) => {\r\n  const res = await fetch(`${baseUrl}/${categoryId}/articles`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const jsonData = await res.json();\r\n\r\n  if (!res.ok) {\r\n    throw new Error(`failed to fetch category articles for category id: ${categoryId}`);\r\n  }\r\n\r\n  return jsonData.data;\r\n}\r\n\r\nexport const getCategoryVideos = async (categoryId) => {\r\n  const res = await fetch(`${baseUrl}/${categoryId}/videos`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const jsonData = await res.json();\r\n\r\n  if (!res.ok) {\r\n    throw new Error(`failed to fetch category videos for category id: ${categoryId}`);\r\n  }\r\n\r\n  return jsonData.data;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getCategories, getCategoryInfo, getCategoryArticles, getCategoryVideos } from \"../api\";\r\n\r\nexport const CategoriesContext = React.createContext({\r\n  isCategoriesLoaded: false,\r\n  categories: [],\r\n  categoriesMap: {},\r\n  setSelectedCategoryId: () => {},\r\n  articles: [],\r\n  videos: [],\r\n  info: \"\",\r\n});\r\n\r\nexport const CategoriesContainer = ({ children }) => {\r\n  const [isCategoriesLoaded, setIsCategoriesLoaded] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoriesMap, setCategoriesMap] = useState({});\r\n  const [selectedCategoryId, setSelectedCategoryId] = useState(\"\");\r\n  const [info, setInfo] = useState(\"\");\r\n  const [articles, setArticles] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  // GetCategories on initial load\r\n  useEffect(() => {\r\n    (async() => {\r\n      setCategories(await getCategories())\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (categories.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const cm = {};\r\n\r\n    categories.forEach((category) => {\r\n      if (category.parent_id === null) {\r\n        cm[category.id] = {\r\n          name: category.name,\r\n          subCategories: [],\r\n        }\r\n      } else {\r\n        cm[category.parent_id].subCategories.push({\r\n          id: category.id,\r\n          name: category.name,\r\n        });\r\n      }\r\n    });\r\n\r\n    setCategoriesMap(cm);\r\n  }, [categories]);\r\n\r\n  useEffect(() => {\r\n    if (categoriesMap !== {}) {\r\n      setIsCategoriesLoaded(true);\r\n    }\r\n  }, [categoriesMap]);\r\n\r\n  // get category info when selectedCategoryId updates\r\n  useEffect(() => {\r\n    if (selectedCategoryId === \"\") {\r\n      return;\r\n    }\r\n\r\n    (async() => {\r\n      setInfo(await getCategoryInfo(selectedCategoryId));\r\n    })();\r\n  }, [selectedCategoryId]);\r\n\r\n  // get category articles when selectedCategoryId updates\r\n  useEffect(() => {\r\n    if (selectedCategoryId === \"\") {\r\n      return;\r\n    }\r\n\r\n    (async() => {\r\n      setArticles(await getCategoryArticles(selectedCategoryId));\r\n    })();\r\n  }, [selectedCategoryId]);\r\n\r\n  // get category videos when selectedCategoryId updates\r\n  useEffect(() => {\r\n    if (selectedCategoryId === \"\") {\r\n      return;\r\n    }\r\n\r\n    (async() => {\r\n      setVideos(await getCategoryVideos(selectedCategoryId));\r\n    })();\r\n  }, [selectedCategoryId]);\r\n\r\n  const contextValue = {\r\n    setSelectedCategoryId,\r\n    isCategoriesLoaded,\r\n    categories,\r\n    categoriesMap,\r\n    info,\r\n    videos,\r\n    articles,\r\n  }\r\n\r\n\r\n  return (\r\n    <CategoriesContext.Provider value={contextValue}>\r\n      {children}\r\n    </CategoriesContext.Provider>\r\n  );\r\n};\r\n","import { DefaultTheme } from 'react-native-paper';\r\n\r\nexport const theme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    primary: '#d64204',\r\n    secondary: '#414757',\r\n    error: '#f13a59',\r\n  },\r\n};\r\n","import { useWindowDimensions } from \"react-native\";\r\n\r\nexport const isLargeScreen = () => {\r\n  const windowWidth = useWindowDimensions().width;\r\n  return windowWidth >= 992;\r\n}\r\n\r\nexport const isMobileScreen = () => {\r\n  return !isLargeScreen();\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Headline, Menu, Divider, Title, IconButton } from \"react-native-paper\";\r\nimport { theme } from \"../core/theme\";\r\nimport { CategoriesContext } from \"../contexts/CategoriesContext\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { isMobileScreen } from \"../core/screen\";\r\n\r\nexport const NewNavbar = () => {\r\n  const navigation = useNavigation();\r\n  const { categoriesMap } = useContext(CategoriesContext);\r\n  const parentIds = Object.keys(categoriesMap);\r\n  const [parentSelected, setParentSelected] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleCategoryOnSelect = (categoryId) => {\r\n    setParentSelected(\"\");\r\n    navigation.navigate(\"Info\", {\r\n      categoryId,\r\n    });\r\n  };\r\n\r\n  const handleContacts = () => {\r\n    setParentSelected(\"\");\r\n    navigation.navigate(\"Contacts\")\r\n  };\r\n\r\n  const handleOnTitlePress = () => {\r\n    setParentSelected(\"\");\r\n    navigation.navigate(\"\");\r\n  };\r\n\r\n  let styles = largeStyles;\r\n\r\n  const isMobile = isMobileScreen()\r\n\r\n  if (isMobile) {\r\n    styles = { ...styles, ...mobileStyles };\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.titleContainer}>\r\n        <IconButton\r\n          icon=\"menu\"\r\n          color=\"black\"\r\n          size={21}\r\n          style={[isMobile ? {} : { display: \"none\" }]}\r\n          onPress={() => setIsOpen(!isOpen)}\r\n        />\r\n        <Title style={styles.title} onPress={handleOnTitlePress}>\r\n          myWellbeing\r\n        </Title>\r\n      </View>\r\n      <View style={[styles.menus, isOpen ? {} : styles.menusHiddenMobile]}>\r\n        {parentIds.map((pId) => {\r\n          return (\r\n            <View key={pId} style={styles.menuItem}>\r\n              <Menu\r\n                style={styles.menu}\r\n                visible={parentSelected === pId}\r\n                onDismiss={() => setParentSelected(\"\")}\r\n                anchor={\r\n                  <Headline\r\n                    style={styles.menuTitle}\r\n                    onPress={() => setParentSelected(pId)}\r\n                  >\r\n                    {categoriesMap[pId].name}\r\n                  </Headline>\r\n                }\r\n              >\r\n                {categoriesMap[pId].subCategories.map((subCategory) => (\r\n                  <Menu.Item\r\n                    key={subCategory.id}\r\n                    onPress={() => handleCategoryOnSelect(subCategory.id)}\r\n                    title={subCategory.name}\r\n                  />\r\n                ))}\r\n              </Menu>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n      <View style={styles.getHelpContainer}>\r\n        <Menu\r\n          style={styles.menu}\r\n          visible={parentSelected === \"get-help\"}\r\n          onDismiss={() => setParentSelected(\"\")}\r\n          anchor={\r\n            <Title\r\n              style={styles.getHelpText}\r\n              onPress={() => setParentSelected(\"get-help\")}\r\n            >\r\n              Get Help Now\r\n            </Title>\r\n          }\r\n        >\r\n          <Menu.Item\r\n            onPress={handleContacts}\r\n            title=\"Contacts\"\r\n            icon=\"phone\"\r\n          />\r\n          <Menu.Item titleStyle={{marginTop:'3%', color: \"#d64204\", paddingBottom: \"5%\"}} onPress={() => {window.open(\"https://www.triplezero.gov.au/\", \"_blank\")}} title={`If you or someone close to you is\\nin distress or immediate danger,\\ndial 000 as soon as possible.`} />\r\n        </Menu>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\nconst largeStyles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n  },\r\n  menus: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexGrow: 1,\r\n  },\r\n  menuTitle: {\r\n    marginRight: 20,\r\n  },\r\n  menu: {\r\n    marginTop: 50,\r\n  },\r\n  titleContainer: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRightWidth: 2,\r\n    borderRightColor: \"black\",\r\n    marginRight: 20,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  menuItem: {\r\n    padding: 10,\r\n    cursor: \"pointer\",\r\n  },\r\n  getHelpContainer: {\r\n    padding: 10,\r\n    backgroundColor: theme.colors.primary,\r\n  },\r\n  getHelpText: {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nconst mobileStyles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  menus: {\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n  },\r\n  menusHiddenMobile: {\r\n    display: \"none\",\r\n  },\r\n  titleContainer: {\r\n    paddingTop: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  menuItem: {\r\n    cursor: \"pointer\",\r\n    paddingLeft: 40,\r\n  },\r\n  menuTitle: {\r\n    marginRight: 0,\r\n    fontSize: 20,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Title } from \"react-native-paper\";\r\nimport { NewNavbar } from \"../components/NewNavbar\";\r\n\r\nexport const HomeScreen = ({ navigation }) => {\r\n  return (\r\n    <View>\r\n      <NewNavbar />\r\n      <View style={styles.contentContainer}>\r\n        <Title>Home Information Here</Title>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  contentContainer: {\r\n    marginTop: 100,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\r\n\r\nexport const Video = ({ video }) => (\r\n  <>\r\n    <Card style={{marginBottom:'5%'}}>\r\n      <Card.Cover source={{ uri: video.image }} />\r\n      <Card.Content>\r\n        <Title>{video.title}</Title>\r\n        <Paragraph numberOfLines={3}>{video.description}</Paragraph>\r\n      </Card.Content>\r\n      <Card.Actions>\r\n        <Button onPress = {() => {window.open(video.url, \"_blank\")}}>View</Button>\r\n      </Card.Actions>\r\n    </Card>\r\n  </>\r\n);\r\n","import React from \"react\";\r\nimport { View, StyleSheet, ScrollView, FlatList, Text } from \"react-native\";\r\nimport { Headline } from \"react-native-paper\";\r\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\r\nimport { theme } from \"../core/theme\";\r\nimport { Video } from \"./Video\";\r\nimport ScrollBox from \"react-responsive-scrollbox\";\r\n\r\nexport const ContentContainer = ({ children }) => {\r\n  const route = useRoute();\r\n  const navigation = useNavigation();\r\n\r\n  const { categoryId } = route.params;\r\n  const routeName = route.name;\r\n\r\n  const handleOnInfoPress = () => {\r\n    if (routeName === \"Info\") {\r\n      return;\r\n    }\r\n\r\n    navigation.navigate(\"Info\", { categoryId })\r\n  };\r\n\r\n  const handleOnArticlesPress = () => {\r\n    if (routeName === \"Articles\") {\r\n      return;\r\n    }\r\n\r\n    navigation.navigate(\"Articles\", { categoryId })\r\n  };\r\n\r\n  const handleOnVideosPress = () => {\r\n    if (routeName === \"Videos\") {\r\n      return;\r\n    }\r\n\r\n    navigation.navigate(\"Videos\", { categoryId })\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n        <View style={styles.container}>\r\n          <View style={styles.tabsContainer}>\r\n            <View style={styles.tabContainer}>\r\n              <Headline style={routeName === \"Info\" && styles.selectedTab} onPress={handleOnInfoPress}>Info</Headline>\r\n            </View>\r\n\r\n            <View style={styles.tabContainer}>\r\n              <Headline style={routeName === \"Articles\" && styles.selectedTab} onPress={handleOnArticlesPress}>Articles</Headline>\r\n            </View>\r\n\r\n            <View style={styles.tabContainer}>\r\n              <Headline style={routeName === \"Videos\" && styles.selectedTab} onPress={handleOnVideosPress}>Videos</Headline>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <ScrollBox style={{height:'80vh', width:'80vw', margin:'auto'}}> \r\n          <View style={{paddingBottom:'20vh'}}>\r\n              {children} \r\n          </View>\r\n        </ScrollBox>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height:'15vh',\r\n    width:'100%',\r\n    marginTop: 50,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  tabsContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginBottom: 50,\r\n  },\r\n\r\n  tabContainer: {\r\n    padding: 20,\r\n  },\r\n\r\n  selectedTab: {\r\n    color: theme.colors.primary,\r\n  },\r\n\r\n  contentContainer: {\r\n    width: \"90%\",\r\n  },\r\n});\r\n","import React, { useContext, useEffect }  from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Text } from \"react-native-paper\";\r\nimport { NewNavbar } from \"../components/NewNavbar\";\r\nimport { CategoriesContext } from \"../contexts/CategoriesContext\";\r\nimport { ContentContainer } from \"../components/ContentContainer\";\r\n\r\nexport const InfoScreen = ({ navigation, route }) => {\r\n  const { categoryId } = route.params;\r\n  const { info, setSelectedCategoryId } = useContext(CategoriesContext);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== \"\") {\r\n      setSelectedCategoryId(categoryId);\r\n    }\r\n  }, [route.params.categoryId]);\r\n\r\n  return (\r\n    <View>\r\n      <NewNavbar />\r\n      <ContentContainer>\r\n        <View>\r\n          <Text>{info}</Text>\r\n        </View>\r\n      </ContentContainer>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n});\r\n","import React from \"react\";\r\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\r\n\r\nexport const Article = ({ article }) => (\r\n  <>\r\n    <Card style={{marginBottom:'5%'}}>\r\n      <Card.Cover source={{ uri: article.image }} />\r\n      <Card.Content>\r\n        <Title>{article.title}</Title>\r\n        <Paragraph numberOfLines={3}>{article.description}</Paragraph>\r\n      </Card.Content>\r\n      <Card.Actions>\r\n        <Button onPress = {() => {window.open(article.url, \"_blank\")}}>View</Button>\r\n      </Card.Actions>\r\n    </Card>\r\n  </>\r\n);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { NewNavbar } from \"../components/NewNavbar\";\r\nimport { CategoriesContext } from \"../contexts/CategoriesContext\";\r\nimport { ContentContainer } from \"../components/ContentContainer\";\r\nimport { Article } from \"../components/Article\";\r\nimport { isMobileScreen } from \"../core/screen\";\r\n\r\nexport const ArticlesScreen = ({ navigation, route }) => {\r\n  const { categoryId } = route.params;\r\n  const { articles, setSelectedCategoryId } = useContext(CategoriesContext);\r\n\r\n  let styles = largeStyles;\r\n\r\n  if (isMobileScreen()) {\r\n    styles = { ...styles, ...mobileStyles };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== \"\") {\r\n      setSelectedCategoryId(categoryId);\r\n    }\r\n  }, [route.params.categoryId]);\r\n\r\n  return (\r\n    <View>\r\n      <NewNavbar />\r\n      <ContentContainer>\r\n        <View style={styles.container}>\r\n          {articles.map((article) => (\r\n            <View key={article.id} style={styles.articleContainer}>\r\n              <Article article={article} />\r\n            </View>\r\n          ))}\r\n        </View>\r\n      </ContentContainer>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst largeStyles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  articleContainer: {\r\n    marginBottom: 20,\r\n    marginRight: 20,\r\n    width: \"30%\",\r\n  },\r\n});\r\n\r\nconst mobileStyles = StyleSheet.create({\r\n  articleContainer: {\r\n    marginBottom: 20,\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import React, { useContext, useEffect }  from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Text, Card, Title, Button, Paragraph } from \"react-native-paper\";\r\nimport { NewNavbar } from \"../components/NewNavbar\";\r\nimport ScrollBox from \"react-responsive-scrollbox\";\r\n\r\nexport const ContactsScreen = () => {\r\n\r\n  const contacts = [\r\n\r\n      {'category': 'Occupational Health and Safety', 'name': 'SafeWork NSW', 'link': 'https://www.safework.nsw.gov.au/contact-us', 'number': '13 10 50'},\r\n      {'category': '', 'name': 'Fair Work Ombudsman', 'link': 'https://www.fairwork.gov.au/contact-us/call-us', 'number': '13 13 94'},\r\n      {'category': 'Mental health and wellbeing', 'name': 'Black dog institute', 'link': 'https://www.blackdoginstitute.org.au/emergency-help/', 'number': ''},\r\n      {'category': 'Physical health and wellbeing', 'name': 'NSW COVID19 line', 'link': 'https://www.health.nsw.gov.au/pages/contact.aspx ', 'number': '1800 020 080'},\r\n      {'category': '', 'name': 'Police non-emergency', 'link': 'https://www.afp.gov.au/contact-us', 'number': '131444'},\r\n      {'category': 'Multiple Areas', 'name': 'Emergency help', 'link': 'https://www.triplezero.gov.au/', 'number': '000'},\r\n      {'category': '', 'name': 'Lifeline', 'link': 'https://www.lifeline.org.au/about/contact-us/ ', 'number': `If you need support call one of the following numbers: \\n ● Lifeline Australia | 13 11 14 \\n ● Kids Helpline | 1800 55 1800 \\n ● MensLine Australia | 1300 78 99 78`},\r\n      {'category': '', 'name': 'Suicide Call-Back Service', 'link': 'https://www.suicidecallbackservice.org.au/contact-us/ ', 'number': '1300 659 467'},\r\n      {'category': '', 'name': 'Beyond Blue', 'link': 'https://www.beyondblue.org.au/about-us/contact-us ', 'number': '1300 22 4636'},\r\n      {'category': '', 'name': 'Open Arms – Veterans & Families Counselling', 'link': 'https://www.openarms.gov.au/about/contact-us-feedback ', 'number': '1800 011 046'},\r\n      {'category': '', 'name': 'Healthdirect', 'link': 'https://www.healthdirect.gov.au/contact-us', 'number': '1800 022 222'},\r\n      {'category': '', 'name': 'Aus Gov Health', 'link': 'https://www.health.gov.au/about-us/contact-us', 'number': '1800 020 103'},\r\n      {'category': '', 'name': 'NSW State Emergency Service', 'link': 'https://www.ses.nsw.gov.au/about-us/contact-us/', 'number': '132500'},\r\n      {'category': '', 'name': 'EAP - Benestar', 'link': 'https://www.benestar.com/contact-us ', 'number': '1300 360 364'},\r\n  ]\r\n\r\n  return (\r\n    <View>\r\n      <NewNavbar />\r\n        <ScrollBox style={{height:'80vh', width:'80vw', margin:'auto', marginTop:'5vh'}}> \r\n            <View style={styles.container}>\r\n\r\n                {contacts.map((contact, i) => \r\n                    (\r\n                        <> \r\n                            {contact.category.length > 0 ? <Text style={{padding:'1vw', fontSize: '20px', fontWeight:'bold'}}> {contact.category} </Text> : ''}\r\n                            <Card style={{width:'400px', marginBottom:'2%'}}>\r\n                                <Card.Content>\r\n                                    <Title>{contact.name}</Title>\r\n                                    {contact.number.length > 0 ? <Paragraph style={{paddingTop:'1vh', paddingBottom:'1vh'}} numberOfLines={5}>{contact.number}</Paragraph> : ''}\r\n                                </Card.Content>\r\n                                <Card.Actions>\r\n                                    <Button onPress = {() => {window.open(contact.link, \"_blank\")}}>View website</Button>\r\n                                </Card.Actions>\r\n                            </Card>\r\n                        </>\r\n                    ))\r\n                }\r\n\r\n            </View>\r\n        </ScrollBox>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop: 50,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        paddingBottom: '20vh'\r\n      },\r\n});\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { NewNavbar } from \"../components/NewNavbar\";\r\nimport { CategoriesContext } from \"../contexts/CategoriesContext\";\r\nimport { ContentContainer } from \"../components/ContentContainer\";\r\nimport { Video } from \"../components/Video\";\r\nimport { isMobileScreen } from \"../core/screen\";\r\n\r\nexport const VideosScreen = ({ navigation, route }) => {\r\n  const { categoryId } = route.params;\r\n  const { videos, setSelectedCategoryId } = useContext(CategoriesContext);\r\n\r\n  let styles = largeStyles;\r\n\r\n  if (isMobileScreen()) {\r\n    styles = { ...styles, ...mobileStyles };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== \"\") {\r\n      setSelectedCategoryId(categoryId);\r\n    }\r\n  }, [route.params.categoryId]);\r\n\r\n  return (\r\n    <View>\r\n      <NewNavbar />\r\n      <ContentContainer>\r\n        <View style={styles.container}>\r\n          {videos.map((video) => (\r\n            <View key={video.id} style={styles.videoContainer}>\r\n              <Video video={video} />\r\n            </View>\r\n          ))}\r\n        </View>\r\n      </ContentContainer>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst largeStyles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  videoContainer: {\r\n    marginBottom: 20,\r\n    marginRight: 20,\r\n    width: \"30%\",\r\n  },\r\n});\r\n\r\nconst mobileStyles = StyleSheet.create({\r\n  videoContainer: {\r\n    marginBottom: 20,\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\n\r\nexport const WatsonChatbot = () => {\r\n  useEffect(() => {\r\n\r\n      var styles = `\r\n        .WAC__homeScreenOriginal-starter-text { \r\n            color: black !important\r\n        }\r\n        .WAC__homeScreenOriginal-starter-icon {\r\n          fill: #D64204 !important\r\n        }\r\n\r\n      `\r\n    var styleSheet = document.createElement(\"style\")\r\n    styleSheet.innerText = styles\r\n    document.head.appendChild(styleSheet)\r\n\r\n\r\n    console.log(\"Watson loaded\");\r\n    window.watsonAssistantChatOptions = {\r\n      integrationID: \"fc29a42b-8166-4aea-9b1e-1a2ad1c11249\", // The ID of this integration.\r\n      region: \"eu-gb\", // The region your integration is hosted in.\r\n      serviceInstanceID: \"9be93b09-ef48-48d6-a34b-5c25e6ac4aaa\", // The ID of your service instance.\r\n      onLoad: function (instance) {\r\n        instance.render();\r\n      },\r\n    };\r\n\r\n    setTimeout(function () {\r\n      const t = document.createElement(\"script\");\r\n      t.src =\r\n        \"https://web-chat.global.assistant.watson.appdomain.cloud/loadWatsonAssistantChat.js\";\r\n      document.head.appendChild(t);\r\n    });\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { CategoriesContext } from \"./contexts/CategoriesContext\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nimport { HomeScreen } from \"./screens/HomeScreen\";\r\nimport { InfoScreen } from \"./screens/InfoScreen\";\r\nimport { ArticlesScreen } from \"./screens/ArticlesScreen\";\r\nimport { ContactsScreen } from \"./screens/ContactsScreen\";\r\nimport { VideosScreen } from \"./screens/VideosScreen\";\r\nimport { WatsonChatbot } from \"./components/WatsonChatbot\";\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nconst Stack = createStackNavigator();\r\n\r\nexport const Main = () => {\r\n  const { isCategoriesLoaded } = useContext(CategoriesContext);\r\n\r\n  if (!isCategoriesLoaded) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator animating={true} />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Stack.Navigator initialRouteName={\"Home\"} headerMode=\"none\">\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Info\" component={InfoScreen} />\r\n        <Stack.Screen name=\"Articles\" component={ArticlesScreen} />\r\n        <Stack.Screen name=\"Videos\" component={VideosScreen} />\r\n        <Stack.Screen name=\"Contacts\" component={ContactsScreen} />\r\n      </Stack.Navigator>\r\n      <WatsonChatbot />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getCategories, getCategoryInfo, getCategoryArticles, getCategoryVideos } from \"../api\";\r\n\r\nexport const UserContext = React.createContext({\r\n  doneInitialising: false,\r\n});\r\n\r\nexport const UserContainer = ({ children }) => {\r\n  const [doneInitialising, setIsDoneInitialising] = useState(false);\r\n\r\n  const contextValue = {\r\n    doneInitialising,\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={contextValue}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Provider as PaperProvider } from \"react-native-paper\";\r\nimport { Main } from \"./Main\";\r\nimport { NavigationContainer, LinkingOptions } from \"@react-navigation/native\";\r\nimport { CategoriesContainer } from \"./contexts/CategoriesContext\";\r\nimport { UserContainer } from \"./contexts/UserContext\";\r\nimport { theme } from \"./core/theme\";\r\n\r\nconst config = {\r\n  screens: {\r\n    Home: \"\",\r\n    Contacts: \"contacts\",\r\n    Info: \":categoryId\",\r\n    Articles: \":categoryId/articles\",\r\n    Videos: \":categoryId/videos\",\r\n  },\r\n};\r\n\r\nconst linking: LinkingOptions = {\r\n  config,\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <NavigationContainer linking={linking}>\r\n        <UserContainer>\r\n          <CategoriesContainer>\r\n            <Main />\r\n          </CategoriesContainer>\r\n        </UserContainer>\r\n      </NavigationContainer>\r\n    </PaperProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}